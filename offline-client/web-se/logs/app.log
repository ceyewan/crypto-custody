2025-04-26 23:07:39.679	[34mINFO[0m	web-se/main.go:30	系统启动
2025-04-26 23:07:39.679	[34mINFO[0m	web-se/main.go:31	配置加载成功	{"port": "8080", "debug": true, "log_file": "web-se.log", "log_dir": "./logs"}
2025-04-26 23:07:39.679	[35mDEBUG[0m	web-se/main.go:41	Gin设置为调试模式
2025-04-26 23:07:39.679	[34mINFO[0m	web-se/main.go:69	服务器启动	{"port": "8080"}
2025-04-26 23:07:47.402	[34mINFO[0m	controllers/mpc.go:54	服务未初始化，尝试初始化
2025-04-26 23:07:47.402	[34mINFO[0m	services/security.go:24	初始化安全芯片服务
2025-04-26 23:07:47.402	[35mDEBUG[0m	services/security.go:32	创建卡片读取器
2025-04-26 23:07:47.416	[35mDEBUG[0m	services/security.go:40	连接读卡器
2025-04-26 23:07:47.417	[35mDEBUG[0m	services/security.go:48	选择安全芯片Applet
2025-04-26 23:07:47.419	[34mINFO[0m	services/security.go:56	安全芯片服务初始化成功
2025-04-26 23:07:47.419	[34mINFO[0m	controllers/mpc.go:41	安全芯片服务初始化成功
2025-04-26 23:07:47.419	[34mINFO[0m	services/mpc.go:23	创建MPC服务
2025-04-26 23:07:47.419	[34mINFO[0m	controllers/mpc.go:45	MPC控制器初始化成功
2025-04-26 23:07:47.419	[34mINFO[0m	controllers/mpc.go:78	接收到密钥生成请求	{"threshold": 2, "parties": 3, "index": 1, "filename": "keygen_data_1", "username": "test_user_1"}
2025-04-26 23:07:47.419	[35mDEBUG[0m	services/mpc.go:32	开始密钥生成过程	{"threshold": 2, "parties": 3, "index": 1, "filename": "keygen_data_1"}
2025-04-26 23:07:47.419	[35mDEBUG[0m	services/mpc.go:46	临时文件路径	{"path": "temp/keygen_data_1"}
2025-04-26 23:07:47.419	[34mINFO[0m	services/mpc.go:57	执行密钥生成命令
2025-04-26 23:07:47.419	[34mINFO[0m	utils/command.go:79	开始密钥生成	{"command": "bin/gg20_keygen", "threshold": 2, "parties": 3, "index": 1, "output": "temp/keygen_data_1"}
2025-04-26 23:07:47.419	[34mINFO[0m	utils/command.go:35	开始执行命令	{"command": "bin/gg20_keygen", "args": "--address http://127.0.0.1:8000 --index 1 --number-of-parties 3 --output temp/keygen_data_1 --threshold 2 --room default", "timeout": "60s"}
2025-04-26 23:07:48.401	[34mINFO[0m	controllers/mpc.go:78	接收到密钥生成请求	{"threshold": 2, "parties": 3, "index": 2, "filename": "keygen_data_2", "username": "test_user_2"}
2025-04-26 23:07:48.401	[35mDEBUG[0m	services/mpc.go:32	开始密钥生成过程	{"threshold": 2, "parties": 3, "index": 2, "filename": "keygen_data_2"}
2025-04-26 23:07:48.401	[35mDEBUG[0m	services/mpc.go:46	临时文件路径	{"path": "temp/keygen_data_2"}
2025-04-26 23:07:48.401	[34mINFO[0m	services/mpc.go:57	执行密钥生成命令
2025-04-26 23:07:48.401	[34mINFO[0m	utils/command.go:79	开始密钥生成	{"command": "bin/gg20_keygen", "threshold": 2, "parties": 3, "index": 2, "output": "temp/keygen_data_2"}
2025-04-26 23:07:48.401	[34mINFO[0m	utils/command.go:35	开始执行命令	{"command": "bin/gg20_keygen", "args": "--address http://127.0.0.1:8000 --index 2 --number-of-parties 3 --output temp/keygen_data_2 --threshold 2 --room default", "timeout": "60s"}
2025-04-26 23:07:49.402	[34mINFO[0m	controllers/mpc.go:78	接收到密钥生成请求	{"threshold": 2, "parties": 3, "index": 3, "filename": "keygen_data_3", "username": "test_user_3"}
2025-04-26 23:07:49.402	[35mDEBUG[0m	services/mpc.go:32	开始密钥生成过程	{"threshold": 2, "parties": 3, "index": 3, "filename": "keygen_data_3"}
2025-04-26 23:07:49.402	[35mDEBUG[0m	services/mpc.go:46	临时文件路径	{"path": "temp/keygen_data_3"}
2025-04-26 23:07:49.402	[34mINFO[0m	services/mpc.go:57	执行密钥生成命令
2025-04-26 23:07:49.402	[34mINFO[0m	utils/command.go:79	开始密钥生成	{"command": "bin/gg20_keygen", "threshold": 2, "parties": 3, "index": 3, "output": "temp/keygen_data_3"}
2025-04-26 23:07:49.402	[34mINFO[0m	utils/command.go:35	开始执行命令	{"command": "bin/gg20_keygen", "args": "--address http://127.0.0.1:8000 --index 3 --number-of-parties 3 --output temp/keygen_data_3 --threshold 2 --room default", "timeout": "60s"}
2025-04-26 23:07:49.608	[34mINFO[0m	utils/command.go:56	命令执行成功	{"stdout": "", "execution_time": "2.189013959s"}
2025-04-26 23:07:49.608	[34mINFO[0m	utils/command.go:93	密钥生成成功
2025-04-26 23:07:49.608	[34mINFO[0m	utils/command.go:56	命令执行成功	{"stdout": "", "execution_time": "1.207380125s"}
2025-04-26 23:07:49.608	[34mINFO[0m	utils/command.go:93	密钥生成成功
2025-04-26 23:07:49.608	[35mDEBUG[0m	services/mpc.go:64	解析JSON文件	{"path": "temp/keygen_data_2"}
2025-04-26 23:07:49.608	[35mDEBUG[0m	services/mpc.go:64	解析JSON文件	{"path": "temp/keygen_data_1"}
2025-04-26 23:07:49.608	[34mINFO[0m	utils/command.go:56	命令执行成功	{"stdout": "", "execution_time": "206.196ms"}
2025-04-26 23:07:49.608	[34mINFO[0m	utils/command.go:93	密钥生成成功
2025-04-26 23:07:49.608	[35mDEBUG[0m	services/mpc.go:64	解析JSON文件	{"path": "temp/keygen_data_3"}
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:72	从JSON提取公钥
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:80	从公钥提取以太坊地址	{"publicKey": "03409242e2ff4151378950cae2a3f1c2b77333ccdb1c52a06c3045e91eac9ddbe0"}
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:72	从JSON提取公钥
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:80	从公钥提取以太坊地址	{"publicKey": "03409242e2ff4151378950cae2a3f1c2b77333ccdb1c52a06c3045e91eac9ddbe0"}
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:72	从JSON提取公钥
2025-04-26 23:07:49.609	[34mINFO[0m	services/mpc.go:90	生成以太坊地址	{"address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:93	读取生成的密钥文件
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:80	从公钥提取以太坊地址	{"publicKey": "03409242e2ff4151378950cae2a3f1c2b77333ccdb1c52a06c3045e91eac9ddbe0"}
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:99	文件内容大小	{"size": "35.67 KB"}
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:102	压缩文件内容
2025-04-26 23:07:49.609	[34mINFO[0m	services/mpc.go:90	生成以太坊地址	{"address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:93	读取生成的密钥文件
2025-04-26 23:07:49.609	[34mINFO[0m	services/mpc.go:90	生成以太坊地址	{"address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:93	读取生成的密钥文件
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:99	文件内容大小	{"size": "35.67 KB"}
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:102	压缩文件内容
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:99	文件内容大小	{"size": "35.68 KB"}
2025-04-26 23:07:49.609	[35mDEBUG[0m	services/mpc.go:102	压缩文件内容
2025-04-26 23:07:49.615	[35mDEBUG[0m	services/mpc.go:108	压缩后数据大小	{"size": "6.24 KB"}
2025-04-26 23:07:49.615	[35mDEBUG[0m	services/mpc.go:111	生成随机加密密钥
2025-04-26 23:07:49.615	[35mDEBUG[0m	services/mpc.go:119	加密压缩数据
2025-04-26 23:07:49.615	[35mDEBUG[0m	services/mpc.go:108	压缩后数据大小	{"size": "6.24 KB"}
2025-04-26 23:07:49.615	[35mDEBUG[0m	services/mpc.go:111	生成随机加密密钥
2025-04-26 23:07:49.615	[35mDEBUG[0m	services/mpc.go:119	加密压缩数据
2025-04-26 23:07:49.615	[35mDEBUG[0m	services/mpc.go:125	加密后数据大小	{"size": "6.26 KB"}
2025-04-26 23:07:49.616	[34mINFO[0m	services/mpc.go:128	存储密钥到安全芯片	{"userName": "test_user_1", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC", "message": "M\ufffd\ufffdaU\ufffd\ufffd3\ufffdG\\\u0013\ufffd\ufffd\ufffdg\\\ufffdXn\u0002X\ufffd&\ufffd\ufffd\ufffd0q\ufffd\u0016\ufffd"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:92	❕准备存储数据到安全芯片❕
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:93	用户名字节	{"userBytes": "c71a9a78e4dabef06705f4530273cab443ce1a44987e36e052345f4fc76ba5a0"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:94	地址字节	{"addrBytes": "c4e734ab54b4c506d1242a172f03af8ffc907adc"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:95	密钥字节	{"key": "4d87856155f69633d4475c13f4e2a0675ce5586e0258d02695f1dc30719c16d1"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:105	调用安全芯片存储数据
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/mpc.go:108	压缩后数据大小	{"size": "6.24 KB"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/mpc.go:111	生成随机加密密钥
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/mpc.go:125	加密后数据大小	{"size": "6.27 KB"}
2025-04-26 23:07:49.616	[34mINFO[0m	services/mpc.go:128	存储密钥到安全芯片	{"userName": "test_user_3", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC", "message": "X\ufffd\ufffd\ufffd\u0007\ufffd\ufffdSs\u0016,\ufffd6\u001d\ufffdu\u00067\ufffd\u0014\ufffd&\ufffd\n\u001e>\ufffdA\ufffd\ufffd\ufffd"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:92	❕准备存储数据到安全芯片❕
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:93	用户名字节	{"userBytes": "3852e3cce10472fc2dd095d6ed866b45d042757819462fa920ab240b462ff8df"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:94	地址字节	{"addrBytes": "c4e734ab54b4c506d1242a172f03af8ffc907adc"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:95	密钥字节	{"key": "5895a38f079fdd5373162cb17f361db8750637fc14fe26e70a1e3ec741feede6"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:105	调用安全芯片存储数据
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/mpc.go:119	加密压缩数据
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/mpc.go:125	加密后数据大小	{"size": "6.27 KB"}
2025-04-26 23:07:49.616	[34mINFO[0m	services/mpc.go:128	存储密钥到安全芯片	{"userName": "test_user_2", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC", "message": "\ufffdtR\ufffd\ufffd\ufffdf$܋ȣ\u0014\ufffdW\ufffd\ufffd\ufffdoj\ufffd?\ufffd\ufffd\ufffd\u0001\u000c,6]qh"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:92	❕准备存储数据到安全芯片❕
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:93	用户名字节	{"userBytes": "6cc3afa565036c8ec65cef4778501e6e4b516104fa3eba22e7011a82aef6e88e"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:94	地址字节	{"addrBytes": "c4e734ab54b4c506d1242a172f03af8ffc907adc"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:95	密钥字节	{"key": "f97452fccfce6624dc8bc8a314fb578feac66f6ae83ff8a2b6010c2c365d7168"}
2025-04-26 23:07:49.616	[35mDEBUG[0m	services/security.go:105	调用安全芯片存储数据
2025-04-26 23:07:49.652	[34mINFO[0m	services/security.go:112	数据已存储到安全芯片	{"index": 4, "total_records": 5}
2025-04-26 23:07:49.652	[34mINFO[0m	services/mpc.go:137	密钥生成完成
2025-04-26 23:07:49.652	[35mDEBUG[0m	services/mpc.go:50	清理临时文件	{"path": "temp/keygen_data_1"}
2025-04-26 23:07:49.652	[34mINFO[0m	controllers/mpc.go:105	密钥生成成功	{"address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC", "username": "test_user_1", "encrypted_key_length": 6413}
2025-04-26 23:07:49.652	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/keygen", "ip": "::1", "status": 200, "latency": "2.250617541s"}
2025-04-26 23:07:49.688	[34mINFO[0m	services/security.go:112	数据已存储到安全芯片	{"index": 5, "total_records": 6}
2025-04-26 23:07:49.689	[34mINFO[0m	services/mpc.go:137	密钥生成完成
2025-04-26 23:07:49.689	[35mDEBUG[0m	services/mpc.go:50	清理临时文件	{"path": "temp/keygen_data_3"}
2025-04-26 23:07:49.689	[34mINFO[0m	controllers/mpc.go:105	密钥生成成功	{"address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC", "username": "test_user_3", "encrypted_key_length": 6418}
2025-04-26 23:07:49.689	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/keygen", "ip": "::1", "status": 200, "latency": "286.94625ms"}
2025-04-26 23:07:49.733	[34mINFO[0m	services/security.go:112	数据已存储到安全芯片	{"index": 6, "total_records": 7}
2025-04-26 23:07:49.733	[34mINFO[0m	services/mpc.go:137	密钥生成完成
2025-04-26 23:07:49.735	[35mDEBUG[0m	services/mpc.go:50	清理临时文件	{"path": "temp/keygen_data_2"}
2025-04-26 23:07:49.735	[34mINFO[0m	controllers/mpc.go:105	密钥生成成功	{"address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC", "username": "test_user_2", "encrypted_key_length": 6420}
2025-04-26 23:07:49.735	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/keygen", "ip": "::1", "status": 200, "latency": "1.334323667s"}
2025-04-26 23:07:50.407	[34mINFO[0m	controllers/mpc.go:188	接收到签名请求	{"parties": "1,2", "data": "这是一条测试消息，时间戳: 1745680070", "filename": "sign_data_1.json", "username": "test_user_1", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:50.407	[35mDEBUG[0m	controllers/mpc.go:194	签名请求详情	{"encrypted_key_length": "6.3 KB", "signature_length": "70 B"}
2025-04-26 23:07:50.407	[35mDEBUG[0m	services/mpc.go:143	开始消息签名过程	{"parties": "1,2", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC", "filename": "sign_data_1.json"}
2025-04-26 23:07:50.407	[35mDEBUG[0m	services/mpc.go:162	临时文件路径	{"path": "temp/sign_data_1.json"}
2025-04-26 23:07:50.407	[34mINFO[0m	services/mpc.go:173	从安全芯片读取密钥	{"userName": "test_user_1", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:50.407	[35mDEBUG[0m	services/security.go:125	准备从安全芯片读取数据	{"username": "test_user_1", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:50.407	[35mDEBUG[0m	services/security.go:144	用户名字节	{"userBytes": "C71A9A78E4DABEF06705F4530273CAB443CE1A44987E36E052345F4FC76BA5A0"}
2025-04-26 23:07:50.407	[35mDEBUG[0m	services/security.go:145	地址字节	{"addrBytes": "C4E734AB54B4C506D1242A172F03AF8FFC907ADC"}
2025-04-26 23:07:50.407	[35mDEBUG[0m	services/security.go:148	调用安全芯片读取数据	{"signature_length": "70 B"}
2025-04-26 23:07:50.423	[34mINFO[0m	services/security.go:156	已从安全芯片读取数据	{"data_length": "32 B"}
2025-04-26 23:07:50.423	[35mDEBUG[0m	services/mpc.go:181	解密数据
2025-04-26 23:07:50.423	[35mDEBUG[0m	services/mpc.go:187	解密后数据大小	{"size": "6.24 KB"}
2025-04-26 23:07:50.423	[35mDEBUG[0m	services/mpc.go:190	解压数据
2025-04-26 23:07:50.423	[35mDEBUG[0m	services/mpc.go:196	解压后数据大小	{"size": "35.68 KB"}
2025-04-26 23:07:50.423	[35mDEBUG[0m	services/mpc.go:199	写入临时文件	{"path": "temp/sign_data_1.json"}
2025-04-26 23:07:50.424	[34mINFO[0m	services/mpc.go:206	执行签名命令	{"parties": "1,2", "data": "这是一条测试消息，时间戳: 1745680070"}
2025-04-26 23:07:50.424	[34mINFO[0m	utils/command.go:110	开始签名操作	{"command": "bin/gg20_signing", "parties": "1,2", "data": "这是一条测试消息，时间戳: 1745680070", "local_share": "temp/sign_data_1.json"}
2025-04-26 23:07:50.424	[34mINFO[0m	utils/command.go:35	开始执行命令	{"command": "bin/gg20_signing", "args": "-p 1,2 -d \"这是一条测试消息，时间戳: 1745680070\" -l temp/sign_data_1.json", "timeout": "60s"}
2025-04-26 23:07:51.408	[34mINFO[0m	controllers/mpc.go:188	接收到签名请求	{"parties": "1,2", "data": "这是一条测试消息，时间戳: 1745680070", "filename": "sign_data_2.json", "username": "test_user_2", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:51.408	[35mDEBUG[0m	controllers/mpc.go:194	签名请求详情	{"encrypted_key_length": "6.3 KB", "signature_length": "70 B"}
2025-04-26 23:07:51.408	[35mDEBUG[0m	services/mpc.go:143	开始消息签名过程	{"parties": "1,2", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC", "filename": "sign_data_2.json"}
2025-04-26 23:07:51.408	[35mDEBUG[0m	services/mpc.go:162	临时文件路径	{"path": "temp/sign_data_2.json"}
2025-04-26 23:07:51.408	[34mINFO[0m	services/mpc.go:173	从安全芯片读取密钥	{"userName": "test_user_2", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:51.408	[35mDEBUG[0m	services/security.go:125	准备从安全芯片读取数据	{"username": "test_user_2", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:51.408	[35mDEBUG[0m	services/security.go:144	用户名字节	{"userBytes": "6CC3AFA565036C8EC65CEF4778501E6E4B516104FA3EBA22E7011A82AEF6E88E"}
2025-04-26 23:07:51.408	[35mDEBUG[0m	services/security.go:145	地址字节	{"addrBytes": "C4E734AB54B4C506D1242A172F03AF8FFC907ADC"}
2025-04-26 23:07:51.408	[35mDEBUG[0m	services/security.go:148	调用安全芯片读取数据	{"signature_length": "70 B"}
2025-04-26 23:07:51.422	[34mINFO[0m	services/security.go:156	已从安全芯片读取数据	{"data_length": "32 B"}
2025-04-26 23:07:51.422	[35mDEBUG[0m	services/mpc.go:181	解密数据
2025-04-26 23:07:51.422	[35mDEBUG[0m	services/mpc.go:187	解密后数据大小	{"size": "6.24 KB"}
2025-04-26 23:07:51.422	[35mDEBUG[0m	services/mpc.go:190	解压数据
2025-04-26 23:07:51.423	[35mDEBUG[0m	services/mpc.go:196	解压后数据大小	{"size": "35.67 KB"}
2025-04-26 23:07:51.423	[35mDEBUG[0m	services/mpc.go:199	写入临时文件	{"path": "temp/sign_data_2.json"}
2025-04-26 23:07:51.423	[34mINFO[0m	services/mpc.go:206	执行签名命令	{"parties": "1,2", "data": "这是一条测试消息，时间戳: 1745680070"}
2025-04-26 23:07:51.423	[34mINFO[0m	utils/command.go:110	开始签名操作	{"command": "bin/gg20_signing", "parties": "1,2", "data": "这是一条测试消息，时间戳: 1745680070", "local_share": "temp/sign_data_2.json"}
2025-04-26 23:07:51.423	[34mINFO[0m	utils/command.go:35	开始执行命令	{"command": "bin/gg20_signing", "args": "-p 1,2 -d \"这是一条测试消息，时间戳: 1745680070\" -l temp/sign_data_2.json", "timeout": "60s"}
2025-04-26 23:07:51.741	[31mERROR[0m	utils/command.go:47	命令执行失败	{"error": "exit status 1", "stdout": "", "stderr": "Error: protocol execution terminated with error: round proceed error: proceeding round: round 6: check sig: Phase6Error\n", "execution_time": "318.584083ms"}
2025-04-26 23:07:51.741	[31mERROR[0m	utils/command.go:47	命令执行失败	{"error": "exit status 1", "stdout": "", "stderr": "Error: protocol execution terminated with error: round proceed error: proceeding round: round 6: check sig: Phase6Error\n", "execution_time": "1.317897833s"}
2025-04-26 23:07:51.742	[31mERROR[0m	utils/command.go:119	签名操作失败	{"error": "exit status 1"}
2025-04-26 23:07:51.742	[31mERROR[0m	utils/command.go:119	签名操作失败	{"error": "exit status 1"}
2025-04-26 23:07:51.742	[31mERROR[0m	services/mpc.go:211	签名命令失败	{"error": "exit status 1"}
2025-04-26 23:07:51.742	[31mERROR[0m	services/mpc.go:211	签名命令失败	{"error": "exit status 1"}
2025-04-26 23:07:51.742	[31mERROR[0m	controllers/mpc.go:210	签名失败	{"error": "签名失败: exit status 1", "username": "test_user_2", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:51.742	[31mERROR[0m	controllers/mpc.go:210	签名失败	{"error": "签名失败: exit status 1", "username": "test_user_1", "address": "0xc4e734ab54B4c506d1242a172F03AF8ffc907aDC"}
2025-04-26 23:07:51.742	[31mERROR[0m	middleware/logger.go:46	API请求	{"method": "POST", "uri": "/api/v1/mpc/sign", "ip": "::1", "status": 500, "latency": "333.942334ms"}
2025-04-26 23:07:51.742	[31mERROR[0m	middleware/logger.go:46	API请求	{"method": "POST", "uri": "/api/v1/mpc/sign", "ip": "::1", "status": 500, "latency": "1.334970792s"}
2025-04-27 09:29:24.558	[34mINFO[0m	web-se/main.go:30	系统启动
2025-04-27 09:29:24.559	[34mINFO[0m	web-se/main.go:31	配置加载成功	{"port": "8080", "debug": true, "log_file": "web-se.log", "log_dir": "./logs"}
2025-04-27 09:29:24.559	[35mDEBUG[0m	web-se/main.go:41	Gin设置为调试模式
2025-04-27 09:29:24.559	[34mINFO[0m	web-se/main.go:69	服务器启动	{"port": "8080"}
2025-04-27 09:29:58.127	[34mINFO[0m	web-se/main.go:30	系统启动
2025-04-27 09:29:58.127	[34mINFO[0m	web-se/main.go:31	配置加载成功	{"port": "8080", "debug": true, "log_file": "web-se.log", "log_dir": "./logs"}
2025-04-27 09:29:58.127	[35mDEBUG[0m	web-se/main.go:41	Gin设置为调试模式
2025-04-27 09:29:58.127	[34mINFO[0m	web-se/main.go:69	服务器启动	{"port": "8080"}
2025-04-27 09:30:06.407	[34mINFO[0m	web-se/main.go:30	系统启动
2025-04-27 09:30:06.408	[34mINFO[0m	web-se/main.go:31	配置加载成功	{"port": "8080", "debug": true, "log_file": "web-se.log", "log_dir": "./logs"}
2025-04-27 09:30:06.408	[35mDEBUG[0m	web-se/main.go:41	Gin设置为调试模式
2025-04-27 09:30:06.408	[34mINFO[0m	web-se/main.go:69	服务器启动	{"port": "8080"}

2025-04-28 23:42:01.033	[34mINFO[0m	web-se/main.go:35	系统启动
2025-04-28 23:42:01.034	[34mINFO[0m	web-se/main.go:36	配置加载成功	{"port": "8080", "debug": true, "log_file": "web-se.log", "log_dir": "./logs"}
2025-04-28 23:42:01.034	[35mDEBUG[0m	services/security.go:30	初始化安全芯片服务	{"debug": true}
2025-04-28 23:42:01.034	[34mINFO[0m	services/security.go:35	创建卡片读取器
2025-04-28 23:42:01.055	[34mINFO[0m	services/security.go:43	连接读卡器
2025-04-28 23:42:01.055	[34mINFO[0m	seclient/cardreader.go:105	可用读卡器列表:
2025-04-28 23:42:01.055	[34mINFO[0m	seclient/cardreader.go:107	  0: GOODIX GSE SmartCard Reader 01
2025-04-28 23:42:01.055	[34mINFO[0m	seclient/cardreader.go:109	  >>> 自动选择了第一个读卡器
2025-04-28 23:42:01.055	[34mINFO[0m	seclient/cardreader.go:107	  1: GOODIX GSE SmartCard Reader
2025-04-28 23:42:01.055	[34mINFO[0m	seclient/cardreader.go:116	使用读卡器: GOODIX GSE SmartCard Reader 01
2025-04-28 23:42:01.115	[34mINFO[0m	seclient/cardreader.go:128	成功连接到读卡器，使用协议: 2
2025-04-28 23:42:01.115	[34mINFO[0m	services/security.go:51	选择安全芯片Applet
2025-04-28 23:42:01.115	[35mDEBUG[0m	seclient/commands.go:199	CPLC数据未缓存，尝试获取
2025-04-28 23:42:01.115	[34mINFO[0m	seclient/cardreader.go:178	=== 发送APDU命令 ===
2025-04-28 23:42:01.115	[34mINFO[0m	seclient/cardreader.go:179	命令: 80CA9F7F00
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:190	响应状态码: 0x9000
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:191	响应数据: 9F7F2A007F0002867F311400014080011C5443A01600090000000900007F43A016011C54000000406710037E82
2025-04-28 23:42:01.117	[35mDEBUG[0m	seclient/commands.go:234	获取CPLC数据成功	{"CPLC标签": "9F7F", "CPLC长度": 42, "CPLC数据": "007f0002867f311400014080011c5443a01600090000000900007f43a016011c54000000406710037e82"}
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:144	=== 选择Applet命令 ===
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:145	APDU: 00A4040008A000000062CF0101
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:146	命令解析:
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:147	  CLA: 0x00 (ISO标准命令)
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:148	  INS: 0xA4 (选择指令)
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:149	  P1: 0x04 (按名称选择)
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:150	  P2: 0x00 (首次选择)
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:151	  Lc: 0x08 (AID长度)
2025-04-28 23:42:01.117	[34mINFO[0m	seclient/cardreader.go:152	  Data: A000000062CF0101 (AID)
2025-04-28 23:42:01.119	[34mINFO[0m	seclient/cardreader.go:166	=== 选择Applet响应 ===
2025-04-28 23:42:01.119	[34mINFO[0m	seclient/cardreader.go:167	响应数据: 9000
2025-04-28 23:42:01.119	[34mINFO[0m	seclient/cardreader.go:168	状态码: 0x9000 (成功)
2025-04-28 23:42:01.119	[34mINFO[0m	seclient/cardreader.go:169	数据: 
2025-04-28 23:42:01.119	[34mINFO[0m	seclient/cardreader.go:170	成功选择Applet, AID: A000000062CF0101
2025-04-28 23:42:01.119	[35mDEBUG[0m	services/security.go:59	安全芯片服务初始化完成
2025-04-28 23:42:01.119	[34mINFO[0m	controllers/mpc.go:41	安全芯片服务初始化成功
2025-04-28 23:42:01.119	[35mDEBUG[0m	services/mpc.go:29	初始化MPC服务
2025-04-28 23:42:01.119	[34mINFO[0m	controllers/mpc.go:45	MPC控制器初始化成功
2025-04-28 23:42:01.119	[35mDEBUG[0m	web-se/main.go:53	Gin设置为调试模式
2025-04-28 23:42:01.119	[34mINFO[0m	web-se/main.go:90	服务器启动	{"port": "8080"}
2025-04-28 23:42:16.521	[34mINFO[0m	controllers/mpc.go:273	接收到获取CPLC信息请求	{"client_ip": "::1"}
2025-04-28 23:42:16.521	[35mDEBUG[0m	services/security.go:225	获取CPLC信息
2025-04-28 23:42:16.521	[35mDEBUG[0m	services/security.go:237	CPLC信息获取成功	{"长度": 42, "CPLC": "007f0002867f311400014080011c5443a01600090000000900007f43a016011c54000000406710037e82"}
2025-04-28 23:42:16.521	[34mINFO[0m	controllers/mpc.go:288	获取CPLC信息成功	{"cplc": "007F0002867F311400014080011C5443A01600090000000900007F43A016011C54000000406710037E82"}
2025-04-28 23:42:16.521	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "GET", "uri": "/api/v1/mpc/cplc", "ip": "::1", "status": 200, "latency": "101.875µs"}
2025-04-28 23:42:16.522	[34mINFO[0m	controllers/mpc.go:97	接收到密钥生成请求	{"threshold": 1, "parties": 3, "index": 1, "filename": "keygen_data_1.json", "username": "test_user_1"}
2025-04-28 23:42:16.522	[35mDEBUG[0m	services/mpc.go:52	开始密钥生成	{"threshold": 1, "parties": 3, "index": 1, "file": "keygen_data_1.json"}
2025-04-28 23:42:16.522	[35mDEBUG[0m	services/mpc.go:66	临时文件路径	{"path": "temp/keygen_data_1.json"}
2025-04-28 23:42:16.522	[34mINFO[0m	services/mpc.go:76	执行密钥生成
2025-04-28 23:42:16.522	[34mINFO[0m	utils/command.go:56	开始密钥生成	{"command": "bin/gg20_keygen", "threshold": 1, "parties": 3, "index": 1, "output": "temp/keygen_data_1.json"}
2025-04-28 23:42:16.522	[34mINFO[0m	utils/command.go:132	开始执行命令	{"command": "bin/gg20_keygen", "args": "--address http://192.168.192.1:8888 --threshold 1 --number-of-parties 3 --index 1 --output temp/keygen_data_1.json", "timeout": "1m0s"}
2025-04-28 23:42:17.524	[34mINFO[0m	controllers/mpc.go:97	接收到密钥生成请求	{"threshold": 1, "parties": 3, "index": 2, "filename": "keygen_data_2.json", "username": "test_user_2"}
2025-04-28 23:42:17.524	[35mDEBUG[0m	services/mpc.go:52	开始密钥生成	{"threshold": 1, "parties": 3, "index": 2, "file": "keygen_data_2.json"}
2025-04-28 23:42:17.524	[35mDEBUG[0m	services/mpc.go:66	临时文件路径	{"path": "temp/keygen_data_2.json"}
2025-04-28 23:42:17.524	[34mINFO[0m	services/mpc.go:76	执行密钥生成
2025-04-28 23:42:17.524	[34mINFO[0m	utils/command.go:56	开始密钥生成	{"command": "bin/gg20_keygen", "threshold": 1, "parties": 3, "index": 2, "output": "temp/keygen_data_2.json"}
2025-04-28 23:42:17.524	[34mINFO[0m	utils/command.go:132	开始执行命令	{"command": "bin/gg20_keygen", "args": "--address http://192.168.192.1:8888 --threshold 1 --number-of-parties 3 --index 2 --output temp/keygen_data_2.json", "timeout": "1m0s"}
2025-04-28 23:42:18.527	[34mINFO[0m	controllers/mpc.go:97	接收到密钥生成请求	{"threshold": 1, "parties": 3, "index": 3, "filename": "keygen_data_3.json", "username": "test_user_3"}
2025-04-28 23:42:18.527	[35mDEBUG[0m	services/mpc.go:52	开始密钥生成	{"threshold": 1, "parties": 3, "index": 3, "file": "keygen_data_3.json"}
2025-04-28 23:42:18.527	[35mDEBUG[0m	services/mpc.go:66	临时文件路径	{"path": "temp/keygen_data_3.json"}
2025-04-28 23:42:18.527	[34mINFO[0m	services/mpc.go:76	执行密钥生成
2025-04-28 23:42:18.527	[34mINFO[0m	utils/command.go:56	开始密钥生成	{"command": "bin/gg20_keygen", "threshold": 1, "parties": 3, "index": 3, "output": "temp/keygen_data_3.json"}
2025-04-28 23:42:18.528	[34mINFO[0m	utils/command.go:132	开始执行命令	{"command": "bin/gg20_keygen", "args": "--address http://192.168.192.1:8888 --threshold 1 --number-of-parties 3 --index 3 --output temp/keygen_data_3.json", "timeout": "1m0s"}
2025-04-28 23:42:19.074	[34mINFO[0m	utils/command.go:140	命令执行成功	{"stdout": "", "execution_time": "546.225541ms"}
2025-04-28 23:42:19.074	[34mINFO[0m	utils/command.go:69	密钥生成成功
2025-04-28 23:42:19.074	[34mINFO[0m	services/mpc.go:83	解析生成的密钥文件
2025-04-28 23:42:19.074	[34mINFO[0m	utils/command.go:140	命令执行成功	{"stdout": "", "execution_time": "2.552174375s"}
2025-04-28 23:42:19.074	[34mINFO[0m	utils/command.go:69	密钥生成成功
2025-04-28 23:42:19.074	[34mINFO[0m	services/mpc.go:83	解析生成的密钥文件
2025-04-28 23:42:19.074	[35mDEBUG[0m	services/mpc.go:96	提取公钥	{"pubkey": "02651c744fee6bd2cf56be9210652b90eae379ef9ddf454e56497cc5106427d505"}
2025-04-28 23:42:19.075	[34mINFO[0m	utils/command.go:140	命令执行成功	{"stdout": "", "execution_time": "1.550545458s"}
2025-04-28 23:42:19.075	[34mINFO[0m	utils/command.go:69	密钥生成成功
2025-04-28 23:42:19.075	[34mINFO[0m	services/mpc.go:83	解析生成的密钥文件
2025-04-28 23:42:19.075	[35mDEBUG[0m	utils/crypto.go:146	从公钥提取以太坊地址成功	{"public_key": "02651c744fee6bd2cf56be9210652b90eae379ef9ddf454e56497cc5106427d505", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:19.075	[34mINFO[0m	services/mpc.go:109	生成以太坊地址	{"addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:19.075	[35mDEBUG[0m	services/mpc.go:117	密钥文件大小	{"size": 35998}
2025-04-28 23:42:19.075	[35mDEBUG[0m	services/mpc.go:96	提取公钥	{"pubkey": "02651c744fee6bd2cf56be9210652b90eae379ef9ddf454e56497cc5106427d505"}
2025-04-28 23:42:19.075	[35mDEBUG[0m	utils/crypto.go:146	从公钥提取以太坊地址成功	{"public_key": "02651c744fee6bd2cf56be9210652b90eae379ef9ddf454e56497cc5106427d505", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:19.075	[34mINFO[0m	services/mpc.go:109	生成以太坊地址	{"addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:19.075	[35mDEBUG[0m	services/mpc.go:117	密钥文件大小	{"size": 35997}
2025-04-28 23:42:19.076	[35mDEBUG[0m	services/mpc.go:96	提取公钥	{"pubkey": "02651c744fee6bd2cf56be9210652b90eae379ef9ddf454e56497cc5106427d505"}
2025-04-28 23:42:19.076	[35mDEBUG[0m	utils/crypto.go:146	从公钥提取以太坊地址成功	{"public_key": "02651c744fee6bd2cf56be9210652b90eae379ef9ddf454e56497cc5106427d505", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:19.076	[34mINFO[0m	services/mpc.go:109	生成以太坊地址	{"addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:19.076	[35mDEBUG[0m	services/mpc.go:117	密钥文件大小	{"size": 35997}
2025-04-28 23:42:19.083	[35mDEBUG[0m	services/mpc.go:125	压缩后数据大小	{"size": 6307}
2025-04-28 23:42:19.083	[34mINFO[0m	services/mpc.go:135	加密密钥数据
2025-04-28 23:42:19.083	[35mDEBUG[0m	utils/crypto.go:30	开始AES加密	{"key_hex": "61f4ab24fadc69061aa3c0fba58df09558564fe350d8835f0d9da23ad73e43b6"}
2025-04-28 23:42:19.083	[35mDEBUG[0m	utils/crypto.go:60	AES加密完成	{"ciphertext_preview": "ee9a15e75c89d387ce0a..."}
2025-04-28 23:42:19.083	[35mDEBUG[0m	services/mpc.go:141	加密后数据大小	{"size": 6335}
2025-04-28 23:42:19.083	[34mINFO[0m	services/mpc.go:144	存储密钥到安全芯片
2025-04-28 23:42:19.084	[35mDEBUG[0m	services/security.go:83	存储数据	{"username": "test_user_1", "addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "key_len": 32}
2025-04-28 23:42:19.084	[34mINFO[0m	services/security.go:116	向安全芯片写入数据
2025-04-28 23:42:19.084	[34mINFO[0m	seclient/commands.go:29	❕存储数据到安全芯片❕	{"username": "c71a9a78e4dabef06705f4530273cab443ce1a44987e36e052345f4fc76ba5a0", "addr": "02daa5860fec628a6c69599d1efd91f496bf1f5c", "message": "61f4ab24fadc69061aa3c0fba58df09558564fe350d8835f0d9da23ad73e43b6"}
2025-04-28 23:42:19.084	[34mINFO[0m	seclient/cardreader.go:178	=== 发送APDU命令 ===
2025-04-28 23:42:19.084	[34mINFO[0m	seclient/cardreader.go:179	命令: 8010000054C71A9A78E4DABEF06705F4530273CAB443CE1A44987E36E052345F4FC76BA5A002DAA5860FEC628A6C69599D1EFD91F496BF1F5C61F4AB24FADC69061AA3C0FBA58DF09558564FE350D8835F0D9DA23AD73E43B6
2025-04-28 23:42:19.084	[35mDEBUG[0m	services/mpc.go:125	压缩后数据大小	{"size": 6305}
2025-04-28 23:42:19.084	[34mINFO[0m	services/mpc.go:135	加密密钥数据
2025-04-28 23:42:19.084	[35mDEBUG[0m	services/mpc.go:125	压缩后数据大小	{"size": 6313}
2025-04-28 23:42:19.084	[35mDEBUG[0m	utils/crypto.go:30	开始AES加密	{"key_hex": "edb3e69838b7deeee3dd13777e36acadec156af4c2a763fd71ab7e9260d0fa63"}
2025-04-28 23:42:19.084	[34mINFO[0m	services/mpc.go:135	加密密钥数据
2025-04-28 23:42:19.084	[35mDEBUG[0m	utils/crypto.go:30	开始AES加密	{"key_hex": "c871b38fa633074397fb602875f6cbca0714ad01b0b912f6356d392c89c3c6da"}
2025-04-28 23:42:19.084	[35mDEBUG[0m	utils/crypto.go:60	AES加密完成	{"ciphertext_preview": "69628ff916a80b9fe468..."}
2025-04-28 23:42:19.084	[35mDEBUG[0m	utils/crypto.go:60	AES加密完成	{"ciphertext_preview": "5da736b3245427b77d49..."}
2025-04-28 23:42:19.084	[35mDEBUG[0m	services/mpc.go:141	加密后数据大小	{"size": 6333}
2025-04-28 23:42:19.084	[35mDEBUG[0m	services/mpc.go:141	加密后数据大小	{"size": 6341}
2025-04-28 23:42:19.084	[34mINFO[0m	services/mpc.go:144	存储密钥到安全芯片
2025-04-28 23:42:19.084	[34mINFO[0m	services/mpc.go:144	存储密钥到安全芯片
2025-04-28 23:42:19.084	[35mDEBUG[0m	services/security.go:83	存储数据	{"username": "test_user_3", "addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "key_len": 32}
2025-04-28 23:42:19.084	[35mDEBUG[0m	services/security.go:83	存储数据	{"username": "test_user_2", "addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "key_len": 32}
2025-04-28 23:42:19.084	[34mINFO[0m	services/security.go:116	向安全芯片写入数据
2025-04-28 23:42:19.084	[34mINFO[0m	services/security.go:116	向安全芯片写入数据
2025-04-28 23:42:19.084	[34mINFO[0m	seclient/commands.go:29	❕存储数据到安全芯片❕	{"username": "3852e3cce10472fc2dd095d6ed866b45d042757819462fa920ab240b462ff8df", "addr": "02daa5860fec628a6c69599d1efd91f496bf1f5c", "message": "edb3e69838b7deeee3dd13777e36acadec156af4c2a763fd71ab7e9260d0fa63"}
2025-04-28 23:42:19.084	[34mINFO[0m	seclient/commands.go:29	❕存储数据到安全芯片❕	{"username": "6cc3afa565036c8ec65cef4778501e6e4b516104fa3eba22e7011a82aef6e88e", "addr": "02daa5860fec628a6c69599d1efd91f496bf1f5c", "message": "c871b38fa633074397fb602875f6cbca0714ad01b0b912f6356d392c89c3c6da"}
2025-04-28 23:42:19.084	[34mINFO[0m	seclient/cardreader.go:178	=== 发送APDU命令 ===
2025-04-28 23:42:19.084	[34mINFO[0m	seclient/cardreader.go:178	=== 发送APDU命令 ===
2025-04-28 23:42:19.084	[34mINFO[0m	seclient/cardreader.go:179	命令: 80100000546CC3AFA565036C8EC65CEF4778501E6E4B516104FA3EBA22E7011A82AEF6E88E02DAA5860FEC628A6C69599D1EFD91F496BF1F5CC871B38FA633074397FB602875F6CBCA0714AD01B0B912F6356D392C89C3C6DA
2025-04-28 23:42:19.084	[34mINFO[0m	seclient/cardreader.go:179	命令: 80100000543852E3CCE10472FC2DD095D6ED866B45D042757819462FA920AB240B462FF8DF02DAA5860FEC628A6C69599D1EFD91F496BF1F5CEDB3E69838B7DEEEE3DD13777E36ACADEC156AF4C2A763FD71AB7E9260D0FA63
2025-04-28 23:42:19.103	[34mINFO[0m	seclient/cardreader.go:190	响应状态码: 0x9000
2025-04-28 23:42:19.103	[34mINFO[0m	seclient/cardreader.go:191	响应数据: 0001
2025-04-28 23:42:19.103	[34mINFO[0m	seclient/commands.go:65	❕存储数据成功❕	{"记录索引": 0, "记录总数": 1}
2025-04-28 23:42:19.103	[35mDEBUG[0m	services/security.go:123	数据存储成功	{"记录索引": 0, "记录总数": 1}
2025-04-28 23:42:19.103	[35mDEBUG[0m	services/mpc.go:150	密钥生成完成	{"addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:19.104	[34mINFO[0m	controllers/mpc.go:124	密钥生成成功	{"address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "username": "test_user_1", "encrypted_key_length": 6335}
2025-04-28 23:42:19.104	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/keygen", "ip": "::1", "status": 200, "latency": "2.581782834s"}
2025-04-28 23:42:19.123	[34mINFO[0m	seclient/cardreader.go:190	响应状态码: 0x9000
2025-04-28 23:42:19.123	[34mINFO[0m	seclient/cardreader.go:191	响应数据: 0102
2025-04-28 23:42:19.123	[34mINFO[0m	seclient/commands.go:65	❕存储数据成功❕	{"记录索引": 1, "记录总数": 2}
2025-04-28 23:42:19.123	[35mDEBUG[0m	services/security.go:123	数据存储成功	{"记录索引": 1, "记录总数": 2}
2025-04-28 23:42:19.123	[35mDEBUG[0m	services/mpc.go:150	密钥生成完成	{"addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:19.123	[34mINFO[0m	controllers/mpc.go:124	密钥生成成功	{"address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "username": "test_user_2", "encrypted_key_length": 6341}
2025-04-28 23:42:19.123	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/keygen", "ip": "::1", "status": 200, "latency": "1.599463167s"}
2025-04-28 23:42:19.143	[34mINFO[0m	seclient/cardreader.go:190	响应状态码: 0x9000
2025-04-28 23:42:19.143	[34mINFO[0m	seclient/cardreader.go:191	响应数据: 0203
2025-04-28 23:42:19.143	[34mINFO[0m	seclient/commands.go:65	❕存储数据成功❕	{"记录索引": 2, "记录总数": 3}
2025-04-28 23:42:19.143	[35mDEBUG[0m	services/security.go:123	数据存储成功	{"记录索引": 2, "记录总数": 3}
2025-04-28 23:42:19.143	[35mDEBUG[0m	services/mpc.go:150	密钥生成完成	{"addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:19.143	[34mINFO[0m	controllers/mpc.go:124	密钥生成成功	{"address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "username": "test_user_3", "encrypted_key_length": 6333}
2025-04-28 23:42:19.143	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/keygen", "ip": "::1", "status": 200, "latency": "615.818ms"}
2025-04-28 23:42:19.529	[34mINFO[0m	controllers/mpc.go:207	接收到签名请求	{"parties": "1,2", "data": "hello", "filename": "sign_data_1.json", "username": "test_user_1", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:19.529	[35mDEBUG[0m	controllers/mpc.go:213	签名请求详情	{"encrypted_key_length": "6.2 KB", "signature_length": "72 B"}
2025-04-28 23:42:19.529	[35mDEBUG[0m	services/mpc.go:171	开始消息签名	{"parties": "1,2", "addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "file": "sign_data_1.json"}
2025-04-28 23:42:19.529	[35mDEBUG[0m	services/mpc.go:190	临时文件路径	{"path": "temp/sign_data_1.json"}
2025-04-28 23:42:19.530	[34mINFO[0m	services/mpc.go:200	从安全芯片读取密钥
2025-04-28 23:42:19.530	[35mDEBUG[0m	services/security.go:137	读取数据	{"username": "test_user_1", "addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "sig_len": 72}
2025-04-28 23:42:19.530	[34mINFO[0m	services/security.go:163	从安全芯片读取数据
2025-04-28 23:42:19.530	[34mINFO[0m	seclient/commands.go:94	❕读取数据从安全芯片❕	{"username": "c71a9a78e4dabef06705f4530273cab443ce1a44987e36e052345f4fc76ba5a0", "addr": "02daa5860fec628a6c69599d1efd91f496bf1f5c", "signature": "3046022100bbdc6aa7277f1d3a74c412bd0cabbb09d418d2cbbc5f7419f504bea8562914220221008162dcf8adbb019be7dd2064c91ad2772c710dbf403beb8d11d4ca0fcc8c85ff"}
2025-04-28 23:42:19.530	[34mINFO[0m	seclient/cardreader.go:178	=== 发送APDU命令 ===
2025-04-28 23:42:19.530	[34mINFO[0m	seclient/cardreader.go:179	命令: 802000007CC71A9A78E4DABEF06705F4530273CAB443CE1A44987E36E052345F4FC76BA5A002DAA5860FEC628A6C69599D1EFD91F496BF1F5C3046022100BBDC6AA7277F1D3A74C412BD0CABBB09D418D2CBBC5F7419F504BEA8562914220221008162DCF8ADBB019BE7DD2064C91AD2772C710DBF403BEB8D11D4CA0FCC8C85FF
2025-04-28 23:42:19.540	[34mINFO[0m	seclient/cardreader.go:190	响应状态码: 0x9000
2025-04-28 23:42:19.540	[34mINFO[0m	seclient/cardreader.go:191	响应数据: 61F4AB24FADC69061AA3C0FBA58DF09558564FE350D8835F0D9DA23AD73E43B6
2025-04-28 23:42:19.540	[34mINFO[0m	seclient/commands.go:121	❕读取数据成功❕
2025-04-28 23:42:19.540	[34mINFO[0m	seclient/commands.go:122	数据: 61f4ab24fadc69061aa3c0fba58df09558564fe350d8835f0d9da23ad73e43b6
2025-04-28 23:42:19.540	[35mDEBUG[0m	services/security.go:170	数据读取成功	{"数据长度": 32}
2025-04-28 23:42:19.540	[34mINFO[0m	services/mpc.go:208	解密密钥数据
2025-04-28 23:42:19.541	[35mDEBUG[0m	utils/crypto.go:76	开始AES解密	{"key_hex": "61f4ab24fadc69061aa3c0fba58df09558564fe350d8835f0d9da23ad73e43b6", "ciphertext_preview": "ee9a15e75c89d387ce0a..."}
2025-04-28 23:42:19.541	[35mDEBUG[0m	utils/crypto.go:106	AES解密成功
2025-04-28 23:42:19.541	[35mDEBUG[0m	services/mpc.go:214	解密后数据大小	{"size": 6307}
2025-04-28 23:42:19.543	[35mDEBUG[0m	services/mpc.go:222	解压后数据大小	{"size": 35997}
2025-04-28 23:42:19.544	[34mINFO[0m	services/mpc.go:231	执行MPC签名
2025-04-28 23:42:19.544	[34mINFO[0m	utils/command.go:79	开始签名操作	{"command": "bin/gg20_signing", "parties": "1,2", "data": "hello", "local_share": "temp/sign_data_1.json"}
2025-04-28 23:42:19.544	[34mINFO[0m	utils/command.go:132	开始执行命令	{"command": "bin/gg20_signing", "args": "--address http://192.168.192.1:8888 --parties 1,2 --data-to-sign hello --local-share temp/sign_data_1.json", "timeout": "1m0s"}
2025-04-28 23:42:20.532	[34mINFO[0m	controllers/mpc.go:207	接收到签名请求	{"parties": "1,2", "data": "hello", "filename": "sign_data_2.json", "username": "test_user_2", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:20.532	[35mDEBUG[0m	controllers/mpc.go:213	签名请求详情	{"encrypted_key_length": "6.2 KB", "signature_length": "70 B"}
2025-04-28 23:42:20.532	[35mDEBUG[0m	services/mpc.go:171	开始消息签名	{"parties": "1,2", "addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "file": "sign_data_2.json"}
2025-04-28 23:42:20.532	[35mDEBUG[0m	services/mpc.go:190	临时文件路径	{"path": "temp/sign_data_2.json"}
2025-04-28 23:42:20.532	[34mINFO[0m	services/mpc.go:200	从安全芯片读取密钥
2025-04-28 23:42:20.532	[35mDEBUG[0m	services/security.go:137	读取数据	{"username": "test_user_2", "addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "sig_len": 70}
2025-04-28 23:42:20.533	[34mINFO[0m	services/security.go:163	从安全芯片读取数据
2025-04-28 23:42:20.533	[34mINFO[0m	seclient/commands.go:94	❕读取数据从安全芯片❕	{"username": "6cc3afa565036c8ec65cef4778501e6e4b516104fa3eba22e7011a82aef6e88e", "addr": "02daa5860fec628a6c69599d1efd91f496bf1f5c", "signature": "304402205b8fe19cd8ba8b0bd0e59bd43a30b930d930461911126548143dbba24cceab7d022012dcd781f1a5a0f1f6948feed8b5c096ea962c3d171aeca25d1aee02b1ca193c"}
2025-04-28 23:42:20.533	[34mINFO[0m	seclient/cardreader.go:178	=== 发送APDU命令 ===
2025-04-28 23:42:20.533	[34mINFO[0m	seclient/cardreader.go:179	命令: 802000007A6CC3AFA565036C8EC65CEF4778501E6E4B516104FA3EBA22E7011A82AEF6E88E02DAA5860FEC628A6C69599D1EFD91F496BF1F5C304402205B8FE19CD8BA8B0BD0E59BD43A30B930D930461911126548143DBBA24CCEAB7D022012DCD781F1A5A0F1F6948FEED8B5C096EA962C3D171AECA25D1AEE02B1CA193C
2025-04-28 23:42:20.543	[34mINFO[0m	seclient/cardreader.go:190	响应状态码: 0x9000
2025-04-28 23:42:20.543	[34mINFO[0m	seclient/cardreader.go:191	响应数据: C871B38FA633074397FB602875F6CBCA0714AD01B0B912F6356D392C89C3C6DA
2025-04-28 23:42:20.543	[34mINFO[0m	seclient/commands.go:121	❕读取数据成功❕
2025-04-28 23:42:20.543	[34mINFO[0m	seclient/commands.go:122	数据: c871b38fa633074397fb602875f6cbca0714ad01b0b912f6356d392c89c3c6da
2025-04-28 23:42:20.543	[35mDEBUG[0m	services/security.go:170	数据读取成功	{"数据长度": 32}
2025-04-28 23:42:20.543	[34mINFO[0m	services/mpc.go:208	解密密钥数据
2025-04-28 23:42:20.544	[35mDEBUG[0m	utils/crypto.go:76	开始AES解密	{"key_hex": "c871b38fa633074397fb602875f6cbca0714ad01b0b912f6356d392c89c3c6da", "ciphertext_preview": "5da736b3245427b77d49..."}
2025-04-28 23:42:20.544	[35mDEBUG[0m	utils/crypto.go:106	AES解密成功
2025-04-28 23:42:20.544	[35mDEBUG[0m	services/mpc.go:214	解密后数据大小	{"size": 6313}
2025-04-28 23:42:20.547	[35mDEBUG[0m	services/mpc.go:222	解压后数据大小	{"size": 35997}
2025-04-28 23:42:20.548	[34mINFO[0m	services/mpc.go:231	执行MPC签名
2025-04-28 23:42:20.548	[34mINFO[0m	utils/command.go:79	开始签名操作	{"command": "bin/gg20_signing", "parties": "1,2", "data": "hello", "local_share": "temp/sign_data_2.json"}
2025-04-28 23:42:20.548	[34mINFO[0m	utils/command.go:132	开始执行命令	{"command": "bin/gg20_signing", "args": "--address http://192.168.192.1:8888 --parties 1,2 --data-to-sign hello --local-share temp/sign_data_2.json", "timeout": "1m0s"}
2025-04-28 23:42:21.062	[34mINFO[0m	utils/command.go:140	命令执行成功	{"stdout": "{\"r\":{\"curve\":\"secp256k1\",\"scalar\":[155,54,80,120,29,44,252,190,104,34,119,7,238,159,85,49,142,160,238,106,35,9,75,44,65,105,153,154,55,181,58,177]},\"s\":{\"curve\":\"secp256k1\",\"scalar\":[18,225,31,53,142,138,39,85,48,130,86,53,44,63,2,84,108,13,160,133,82,185,184,70,91,61,93,44,84,212,98,125]},\"recid\":0}\n", "execution_time": "514.055333ms"}
2025-04-28 23:42:21.062	[34mINFO[0m	utils/command.go:91	签名操作成功
2025-04-28 23:42:21.062	[35mDEBUG[0m	services/mpc.go:244	签名完成	{"sig": "0x{\"r\":{\"curve\":\"secp256k1\",\"scalar\":[155,54,80,120,29,44,252,190,104,34,119,7,238,159,85,49,142,160,238,106,35,9,75,44,65,105,153,154,55,181,58,177]},\"s\":{\"curve\":\"secp256k1\",\"scalar\":[18,225,31,53,142,138,39,85,48,130,86,53,44,63,2,84,108,13,160,133,82,185,184,70,91,61,93,44,84,212,98,125]},\"recid\":0}"}
2025-04-28 23:42:21.063	[34mINFO[0m	controllers/mpc.go:246	签名成功	{"username": "test_user_2", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:21.063	[35mDEBUG[0m	controllers/mpc.go:249	签名结果	{"signature": "0x{\"r\":{\"curve\":\"secp256k1\",\"scalar\":[155,54,80,120,29,44,252,190,104,34,119,7,238,159,85,49,142,160,238,106,35,9,75,44,65,105,153,154,55,181,58,177]},\"s\":{\"curve\":\"secp256k1\",\"scalar\":[18,225,31,53,142,138,39,85,48,130,86,53,44,63,2,84,108,13,160,133,82,185,184,70,91,61,93,44,84,212,98,125]},\"recid\":0}"}
2025-04-28 23:42:21.063	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/sign", "ip": "::1", "status": 200, "latency": "531.155833ms"}
2025-04-28 23:42:21.064	[34mINFO[0m	utils/command.go:140	命令执行成功	{"stdout": "{\"r\":{\"curve\":\"secp256k1\",\"scalar\":[155,54,80,120,29,44,252,190,104,34,119,7,238,159,85,49,142,160,238,106,35,9,75,44,65,105,153,154,55,181,58,177]},\"s\":{\"curve\":\"secp256k1\",\"scalar\":[18,225,31,53,142,138,39,85,48,130,86,53,44,63,2,84,108,13,160,133,82,185,184,70,91,61,93,44,84,212,98,125]},\"recid\":0}\n", "execution_time": "1.519797917s"}
2025-04-28 23:42:21.064	[34mINFO[0m	utils/command.go:91	签名操作成功
2025-04-28 23:42:21.064	[35mDEBUG[0m	services/mpc.go:244	签名完成	{"sig": "0x{\"r\":{\"curve\":\"secp256k1\",\"scalar\":[155,54,80,120,29,44,252,190,104,34,119,7,238,159,85,49,142,160,238,106,35,9,75,44,65,105,153,154,55,181,58,177]},\"s\":{\"curve\":\"secp256k1\",\"scalar\":[18,225,31,53,142,138,39,85,48,130,86,53,44,63,2,84,108,13,160,133,82,185,184,70,91,61,93,44,84,212,98,125]},\"recid\":0}"}
2025-04-28 23:42:21.064	[34mINFO[0m	controllers/mpc.go:246	签名成功	{"username": "test_user_1", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:21.064	[35mDEBUG[0m	controllers/mpc.go:249	签名结果	{"signature": "0x{\"r\":{\"curve\":\"secp256k1\",\"scalar\":[155,54,80,120,29,44,252,190,104,34,119,7,238,159,85,49,142,160,238,106,35,9,75,44,65,105,153,154,55,181,58,177]},\"s\":{\"curve\":\"secp256k1\",\"scalar\":[18,225,31,53,142,138,39,85,48,130,86,53,44,63,2,84,108,13,160,133,82,185,184,70,91,61,93,44,84,212,98,125]},\"recid\":0}"}
2025-04-28 23:42:21.064	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/sign", "ip": "::1", "status": 200, "latency": "1.535096166s"}
2025-04-28 23:42:21.533	[34mINFO[0m	controllers/mpc.go:344	接收到删除数据请求	{"username": "test_user_1", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:21.533	[35mDEBUG[0m	controllers/mpc.go:347	删除请求详情	{"signature_length": "70 B"}
2025-04-28 23:42:21.534	[35mDEBUG[0m	services/security.go:183	删除数据	{"username": "test_user_1", "addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "sig_len": 70}
2025-04-28 23:42:21.534	[34mINFO[0m	services/security.go:209	从安全芯片删除数据
2025-04-28 23:42:21.534	[34mINFO[0m	seclient/commands.go:148	❕删除数据从安全芯片❕	{"username": "c71a9a78e4dabef06705f4530273cab443ce1a44987e36e052345f4fc76ba5a0", "addr": "02daa5860fec628a6c69599d1efd91f496bf1f5c", "signature": "304402200204e5f333c846c18959ddc52bb58a6e4d073d2d81f9d49ee2480b98254a7ed8022008d77f7f1fc86a8ed7085075fcf21ccb5a2df85edf5cbfd579426f3feb9238eb"}
2025-04-28 23:42:21.534	[34mINFO[0m	seclient/cardreader.go:178	=== 发送APDU命令 ===
2025-04-28 23:42:21.534	[34mINFO[0m	seclient/cardreader.go:179	命令: 803000007AC71A9A78E4DABEF06705F4530273CAB443CE1A44987E36E052345F4FC76BA5A002DAA5860FEC628A6C69599D1EFD91F496BF1F5C304402200204E5F333C846C18959DDC52BB58A6E4D073D2D81F9D49EE2480B98254A7ED8022008D77F7F1FC86A8ED7085075FCF21CCB5A2DF85EDF5CBFD579426F3FEB9238EB
2025-04-28 23:42:21.554	[34mINFO[0m	seclient/cardreader.go:190	响应状态码: 0x9000
2025-04-28 23:42:21.554	[34mINFO[0m	seclient/cardreader.go:191	响应数据: 0002
2025-04-28 23:42:21.554	[34mINFO[0m	seclient/commands.go:183	❕删除数据成功❕	{"记录索引": 0, "剩余记录数": 2}
2025-04-28 23:42:21.554	[35mDEBUG[0m	services/security.go:216	数据删除成功	{"记录索引": 0, "记录总数": 2}
2025-04-28 23:42:21.554	[34mINFO[0m	controllers/mpc.go:364	删除数据成功	{"username": "test_user_1", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:21.554	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/delete", "ip": "::1", "status": 200, "latency": "21.34325ms"}
2025-04-28 23:42:22.557	[34mINFO[0m	controllers/mpc.go:344	接收到删除数据请求	{"username": "test_user_2", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:22.557	[35mDEBUG[0m	controllers/mpc.go:347	删除请求详情	{"signature_length": "72 B"}
2025-04-28 23:42:22.557	[35mDEBUG[0m	services/security.go:183	删除数据	{"username": "test_user_2", "addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "sig_len": 72}
2025-04-28 23:42:22.557	[34mINFO[0m	services/security.go:209	从安全芯片删除数据
2025-04-28 23:42:22.557	[34mINFO[0m	seclient/commands.go:148	❕删除数据从安全芯片❕	{"username": "6cc3afa565036c8ec65cef4778501e6e4b516104fa3eba22e7011a82aef6e88e", "addr": "02daa5860fec628a6c69599d1efd91f496bf1f5c", "signature": "3046022100e69e79b813468bd72fa273174410abac3c8c62970d4eae31d550367bd6de9c07022100932fa2174ef2e3cfea4136084a7dbbad4b7aa9bcf4bee767345ec49362a3ba87"}
2025-04-28 23:42:22.557	[34mINFO[0m	seclient/cardreader.go:178	=== 发送APDU命令 ===
2025-04-28 23:42:22.557	[34mINFO[0m	seclient/cardreader.go:179	命令: 803000007C6CC3AFA565036C8EC65CEF4778501E6E4B516104FA3EBA22E7011A82AEF6E88E02DAA5860FEC628A6C69599D1EFD91F496BF1F5C3046022100E69E79B813468BD72FA273174410ABAC3C8C62970D4EAE31D550367BD6DE9C07022100932FA2174EF2E3CFEA4136084A7DBBAD4B7AA9BCF4BEE767345EC49362A3BA87
2025-04-28 23:42:22.570	[34mINFO[0m	seclient/cardreader.go:190	响应状态码: 0x9000
2025-04-28 23:42:22.570	[34mINFO[0m	seclient/cardreader.go:191	响应数据: 0101
2025-04-28 23:42:22.570	[34mINFO[0m	seclient/commands.go:183	❕删除数据成功❕	{"记录索引": 1, "剩余记录数": 1}
2025-04-28 23:42:22.570	[35mDEBUG[0m	services/security.go:216	数据删除成功	{"记录索引": 1, "记录总数": 1}
2025-04-28 23:42:22.570	[34mINFO[0m	controllers/mpc.go:364	删除数据成功	{"username": "test_user_2", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:22.570	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/delete", "ip": "::1", "status": 200, "latency": "13.559917ms"}
2025-04-28 23:42:23.573	[34mINFO[0m	controllers/mpc.go:344	接收到删除数据请求	{"username": "test_user_3", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:23.573	[35mDEBUG[0m	controllers/mpc.go:347	删除请求详情	{"signature_length": "71 B"}
2025-04-28 23:42:23.573	[35mDEBUG[0m	services/security.go:183	删除数据	{"username": "test_user_3", "addr": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C", "sig_len": 71}
2025-04-28 23:42:23.573	[34mINFO[0m	services/security.go:209	从安全芯片删除数据
2025-04-28 23:42:23.573	[34mINFO[0m	seclient/commands.go:148	❕删除数据从安全芯片❕	{"username": "3852e3cce10472fc2dd095d6ed866b45d042757819462fa920ab240b462ff8df", "addr": "02daa5860fec628a6c69599d1efd91f496bf1f5c", "signature": "30450220288cd94d4a05e6c1f8b4575b208370a4b0d5942a3ec0039487fc89c8a556f8fb022100ba87ddeba851e860c46d4f9248ffba75959f95f81ac52ba5f9d5375742d91456"}
2025-04-28 23:42:23.573	[34mINFO[0m	seclient/cardreader.go:178	=== 发送APDU命令 ===
2025-04-28 23:42:23.573	[34mINFO[0m	seclient/cardreader.go:179	命令: 803000007B3852E3CCE10472FC2DD095D6ED866B45D042757819462FA920AB240B462FF8DF02DAA5860FEC628A6C69599D1EFD91F496BF1F5C30450220288CD94D4A05E6C1F8B4575B208370A4B0D5942A3EC0039487FC89C8A556F8FB022100BA87DDEBA851E860C46D4F9248FFBA75959F95F81AC52BA5F9D5375742D91456
2025-04-28 23:42:23.590	[34mINFO[0m	seclient/cardreader.go:190	响应状态码: 0x9000
2025-04-28 23:42:23.590	[34mINFO[0m	seclient/cardreader.go:191	响应数据: 0200
2025-04-28 23:42:23.590	[34mINFO[0m	seclient/commands.go:183	❕删除数据成功❕	{"记录索引": 2, "剩余记录数": 0}
2025-04-28 23:42:23.590	[35mDEBUG[0m	services/security.go:216	数据删除成功	{"记录索引": 2, "记录总数": 0}
2025-04-28 23:42:23.590	[34mINFO[0m	controllers/mpc.go:364	删除数据成功	{"username": "test_user_3", "address": "0x02daa5860FeC628a6C69599D1eFD91F496bf1f5C"}
2025-04-28 23:42:23.591	[34mINFO[0m	middleware/logger.go:50	API请求	{"method": "POST", "uri": "/api/v1/mpc/delete", "ip": "::1", "status": 200, "latency": "17.690209ms"}
